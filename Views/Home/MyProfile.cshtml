@model MyProfileVM

@{
    ViewData["Title"] = "Profilim";
}

@{
        var htmlAttributes = new Dictionary<string, object>
{{"class", "border-b-2 text-[1rem] bg-appBgMain border-gray-300 focus:outline-none focus:border-appPrimary w-full py-2"}};
    var htmlAttributesCities = new Dictionary<string, object>
{{"class", "border-b-2 text-[1rem] bg-appBgMain border-gray-300 focus:outline-none focus:border-appPrimary w-full py-2"}, {"id", "cityDropdown"}};
    var htmlAttributesDisricts = new Dictionary<string, object>
{{"class", "border-b-2 text-[1rem] bg-appBgMain border-gray-300 focus:outline-none focus:border-appPrimary w-full py-2"}, {"id", "districtDropdown"}};

    if (!Model.IsEditMode)
    {
        htmlAttributes.Add("disabled", "disabled");
        htmlAttributesCities.Add("disabled", "disabled");
        htmlAttributesDisricts.Add("disabled", "disabled");
    }
}

@await Html.PartialAsync("_HeaderPartial", new HeaderModel
{
    Text = "Profilim",
    ArrowLink = "/Home/Index",
})
<div class="flex flex-col py-11 px-4 gap-[2.375rem] mb-14">

@* Co-op Izni *@
    <div class="grid grid-cols-3 gap-3 border-b-[1px] border-appStroke pb-3">
        <img class="col-span-1 w-full" src="~/images/home/businessDealIcon.png" alt="Deal Icon">
        <div class="col-span-2 text-appText">
            <h1 class="text-base font-semibold">İşletmenizi İş Birliklerine Açın</h1>
            <p class="text-sm">Dükkanınızın camına ilan / reklam asmak, yeni çıkan ürünleri denemek gibi iş birlikleri
                ile ilave gelir
                elde edebilirsiniz.</p>
            <a class="text-appPrimary" href="">Detaylı bilgi</a>
        </div>

        <div class="col-span-3">
            <div class="flex items-center gap-2 mt-4 relative">
                <div class="flex flex-col gap-5">
                    <p class="text-sm text-appSecondary">Esnafa Gelir üzerinden dükkanıma gelecek iş birlikleriyle
                        ilgili bilgilendirmelere açığım</p>
                </div>
                <label class="relative inline-flex items-center">
                    <input id="allowsCoop" type="checkbox" asp-for="Business.AllowsCooperation" class="sr-only peer">
                    <div class="w-[3.20rem] h-8 bg-gray-200 rounded-full peer peer-checked:bg-appSecondary">
                    </div>
                    <div
                        class="absolute top-1 left-1 bg-white border border-gray-300 rounded-full h-6 w-6 peer-checked:translate-x-[calc(100%-0.30rem)] transition-transform">
                    </div>
                </label>
                <div id="coop-warning" class="bg-appBgMain absolute top-0 left-0 duration-500 opacity-0 -z-10">
                    <p class="text-appWarning text-sm p-4">İşletmenizi işbirliklerine açmak için lütfen önce işletme
                        kaydınızı tamamlayınız.</p>
                </div>
            </div>
        </div>
    </div>

@* Profil Bilgileri Guncelleme Alani *@
    <form action="/Home/MyProfile" method="post">
        <div class="w-full flex flex-col gap-8">

            @* BUTTON *@
            <input type="hidden" asp-for="IsEditMode" />
            @if (!Model.IsEditMode)
            {
                <button class="bg-appPrimary text-white px-28 py-3 rounded-full text-[1.38rem] font-bold" type="submit">
                    Güncelle
                </button>
            }
            else
            {
                <button class="bg-appSecondary text-white px-28 py-3 rounded-full text-[1.38rem] font-bold" type="submit">
                    Kaydet
                </button>
            }

            @if (Model.IsUpdatedSuccesfully)
            {
                <p class="text-appSecondary text-sm text-center">Güncelleme Başarılı</p>
            }

            @* Profil Bilgiler *@
            <div class="flex flex-col justify-center gap-4">
                <h1 class="text-[1.375rem] font-bold text-appText">Profil Bilgileri</h1>
                <div>
                    <label asp-for="User.Name" class="text-appStroke text-xs font-inter font-normal">Ad</label>
                    <input readonly="@(!Model.IsEditMode)"
                        class="border-b-[1px] pb-1 text-[1rem] border-appStroke focus:outline-none @(Model.IsEditMode ? "focus:border-appPrimary" : "") w-full bg-appBgMain"
                        asp-for="User.Name" type="text">
                    <span class="text-appWarning text-sm" asp-validation-for="User.Name"></span>
                </div>
                <div>
                    <label asp-for="User.Surname" class="text-appStroke text-xs font-inter font-normal">Soyad</label>
                    <input readonly="@(!Model.IsEditMode)"
                        class="border-b-[1px] pb-1 text-[1rem] border-appStroke focus:outline-none @(Model.IsEditMode ? "focus:border-appPrimary" : "") w-full bg-appBgMain"
                        asp-for="User.Surname" type="text">
                    <span class="text-appWarning text-sm" asp-validation-for="User.Surname"></span>
                </div>
                <div>
                    <label asp-for="User.PhoneNumber" class="text-appStroke text-xs font-inter font-normal">Cep
                        Telefonu</label>
                    <input readonly="@(!Model.IsEditMode)"
                        class="border-b-[1px] pb-1 text-[1rem] border-appStroke focus:outline-none @(Model.IsEditMode ? "focus:border-appPrimary" : "") w-full bg-appBgMain"
                        asp-for="User.PhoneNumber" type="tel">
                    <span class="text-appWarning text-sm" asp-validation-for="User.PhoneNumber"></span>
                </div>
                <div>
                    <label asp-for="SelectedRoleId" class="text-appStroke text-xs font-inter font-normal">İşletmedeki
                        Rolü</label>
                    @Html.DropDownListFor(
                             s => s.SelectedRoleId,
                             new SelectList(Model.Roles, "RoleId", "RoleName"),
                             "Seçiniz",
                             htmlAttributes)
                    <span class="text-appWarning text-sm" asp-validation-for="SelectedRoleId"></span>
                </div>
            </div>

            @* Isletme Bilgileri *@
            <div class="flex flex-col justify-center gap-4">
                <h1 class="text-[1.375rem] font-bold text-appText mt-5">İşletme Bilgileri</h1>
                
                <div>
                    <label asp-for="Business.BusinessName" class="text-appStroke text-xs font-inter font-normal">İşletme
                        Adı</label>
                    <input readonly="@(!Model.IsEditMode)"
                        class="border-b-[1px] pb-1 text-[1rem] border-appStroke focus:outline-none @(Model.IsEditMode ? "focus:border-appPrimary" : "") w-full bg-appBgMain"
                        asp-for="Business.BusinessName" type="text">
                    <span class="text-appWarning text-sm" asp-validation-for="Business.BusinessName"></span>
                </div>

                <div>
                    <label asp-for="SelectedBusinessTypeId"
                        class="text-appStroke text-xs font-inter font-normal">İşletme
                        Türü</label>
                    @Html.DropDownListFor(
                             s => s.SelectedBusinessTypeId,
                             new SelectList(Model.BusinessTypes, "BusinessTypeId", "BusinessTypeName"),
                             "Seçiniz",
                             htmlAttributes)
                    <span class="text-appWarning text-sm" asp-validation-for="SelectedBusinessTypeId"></span>
                </div>

                <div>
                    <label asp-for="SelectedCityId" class="text-appStroke text-xs font-inter font-normal">İl</label>
                    @Html.DropDownListFor(
                        s=> s.SelectedCityId,
                        new SelectList(Model.Cities, "CityId", "CityName"),
                        "Seçiniz",
                        htmlAttributesCities
                        )
                    <span class="text-appWarning text-sm" asp-validation-for="SelectedCityId"></span>
                </div>
                
                <div>
                    <label asp-for="SelectedDisrictId" class="text-appStroke text-xs font-inter font-normal">İlçe</label>
                    @Html.DropDownListFor(
                        s=> s.SelectedDisrictId,
                        new SelectList(Model.Districts, "DistrictId", "DistrictName"),
                        "Seçiniz",
                        htmlAttributesDisricts
                        )
                    <span class="text-appWarning text-sm" asp-validation-for="SelectedDisrictId"></span>
                </div>

                <div>
                    <label asp-for="Business.Address"
                        class="text-appStroke text-xs font-inter font-normal">Adress</label>
                    <textarea readonly="@(!Model.IsEditMode)"
                        class="border-b-[1px] pb-1 text-[1rem] border-appStroke focus:outline-none @(Model.IsEditMode ? "focus:border-appPrimary" : "") w-full bg-appBgMain"
                        asp-for="Business.Address"></textarea>
                    <span class="text-appWarning text-sm" asp-validation-for="Business.Address"></span>
                </div>

            </div>
        </div>
    </form>
</div>

<script>
    document.getElementById("cityDropdown").addEventListener("change", function () {
        const cityId = this.value
        const districtDropdown = document.getElementById("districtDropdown")

        if (!cityId) {
            districtDropdown.innerHTML = '<option value="">Önce Şehir Seçiniz</option>';
            return
        }

        fetch(`/Register/GetDistrictsByCityId?cityId=${cityId}`)
            .then(response => response.json())
            .then(data => {
                console.log(data)

                districtDropdown.innerHTML = '<option value="0">Seçiniz</option>'
                data.forEach(district => {
                    const option = document.createElement("option")
                    option.value = district.districtId
                    option.textContent = district.districtName                   
                    districtDropdown.appendChild(option)
                });
            })
            .catch(error => console.error("Hata:", error))
    });
</script>

<script>
    // Debounce fonksiyonu: Bir süre boyunca başka çağrı gelmezse işlemi gerçekleştirir
    function debounce(func, delay) {
        let timer;
        return function (...args) {
            clearTimeout(timer);
            timer = setTimeout(() => func.apply(this, args), delay);
        };
    }

    // Checkbox değişikliklerini dinle
    document.querySelector("#allowsCoop").addEventListener("change", function (e) {
        const id = @Model.Business.BusinessId;
        const allows = e.target.checked;

        const coopWarning = document.querySelector("#coop-warning")
        // ID kontrolü
        if (id === 0) {
            coopWarning.classList.remove('-z-10')
            coopWarning.classList.add('z-10')
            coopWarning.classList.remove('opacity-0')
            coopWarning.classList.add('opacity-100')

            //todo 3 saniye bekle
            setTimeout(() => {
                // classlari eski haline getir
                coopWarning.classList.remove('z-10');
                coopWarning.classList.add('-z-10');
                coopWarning.classList.remove('opacity-100');
                coopWarning.classList.add('opacity-0');
            }, 2000);

            // checkboxu eski haline dondur
            e.target.checked = false;
            return; // İşlem devam etmesin
        }

        // ID geçerli ise sorgu işlemini debounce ile gerçekleştirin
        debounce(async function () {
            console.log("BusinessId:", id);
            console.log("AllowsCoop:", allows);

            const response = await fetch(`/Home/UpdateAllowsCoop?businessId=${id}&allowsCoop=${allows}`, {
                method: 'POST',
            });

            if (response.ok) {
                console.log("Güncellendi");
            } else {
                console.log("Güncellenmedi");
            }
        }, 1000)(); // 1 saniye debounce süresi
    });

</script>
